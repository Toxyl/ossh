{{ define "stats" }}
{{ template "ws_conn" dict "Scheme" .Scheme "Name" "stats" "OpenFn" "ws_st_open" "CloseFn" "ws_st_close" "PreConnectFn" "ws_st_preconnect" "ReceiveFn" "ws_st_receive" "ReceiveCompleteFn" "ws_st_receive_complete" "SendFn" "ws_st_send" }}
<script type="text/javascript">
    function ws_st_open(evt) { hide_overlay_connection(); }
    function ws_st_close(evt) { show_overlay_connection(); }
    function ws_st_preconnect(evt) { }

    function ws_st_receive(message) {
        if (message.trim() == "")
            return;

        var fnUpdate = function(name, value) {
            $('#ts'+name).html(value);
        };

        m = JSON.parse(message);
        mt = m.total;
        
        if (m.node != undefined && m.node != null) {
            mn = m.node;
            fnUpdate('HostsNode', mn.hosts);
            fnUpdate('UsersNode', mn.users);
            fnUpdate('PasswordsNode', mn.passwords);
            fnUpdate('PayloadsNode', mn.payloads);
            fnUpdate('SessionsNode', mn.sessions);
            fnUpdate('LoginsAttemptedNode', mn.logins_attempted);
            fnUpdate('LoginsSuccessfulNode', mn.logins_successful);
            fnUpdate('LoginsFailedNode', mn.logins_failed);
            fnUpdate('TimeWastedNode', humanTimeInterval(mn.time_wasted));
            fnUpdate('UptimeNode', humanTimeInterval(mn.uptime));
        }
        
        if (m.total != undefined && m.total != null) {
            mt = m.total;
            fnUpdate('HostsTotal', mt.hosts);
            fnUpdate('UsersTotal', mt.users);
            fnUpdate('PasswordsTotal', mt.passwords);
            fnUpdate('PayloadsTotal', mt.payloads);
            fnUpdate('SessionsTotal', mt.sessions);
            fnUpdate('LoginsAttemptedTotal', mt.logins_attempted);
            fnUpdate('LoginsSuccessfulTotal', mt.logins_successful);
            fnUpdate('LoginsFailedTotal', mt.logins_failed);
            fnUpdate('TimeWastedTotal', humanTimeInterval(mt.time_wasted));
            fnUpdate('UptimeTotal', humanTimeInterval(mt.uptime));
        }
    }

    function ws_st_receive_complete() { }
    function ws_st_send() { }
</script>
<div class="w3-bar w3-black w3-bottom">
    <div class="w3-bar-item">
        <div class="left pad-right-5px"><b>{{ .HostName }}</b><br><b>+ neighbors =</b></div>
    </div>
    
    <div class="w3-bar-item">
        <div id="tsUptime" class="float-left right pad-right-5px"><span id="tsUptimeNode"></span><br><span id="tsUptimeTotal"></span></div>
        <div class="float-right left pad-left-5px"><b>uptime</b><br><i>(sum)</i></div>
    </div>

    <div class="w3-bar-item">
        <div id="tsTimeWasted" class="float-left right pad-right-5px"><span id="tsTimeWastedNode"></span><br><span id="tsTimeWastedTotal"></span></div>
        <div class="float-right left pad-left-5px"><b>wasted</b><br><i>(sum)</i></div>
    </div>   

    <div class="w3-bar-item">
        <div id="tsSessions" class="float-left right pad-right-5px"><span id="tsSessionsNode"></span><br><span id="tsSessionsTotal"></span></div>
        <div class="float-right left pad-left-5px"><b>sessions</b><br><i>(sum)</i></div>
    </div>

    <div class="w3-bar-item">
        <div id="tsLoginsAttempted" class="float-left right pad-right-5px"><span id="tsLoginsAttemptedNode"></span><br><span id="tsLoginsAttemptedTotal"></span></div>
        <div class="float-right left pad-left-5px"><b>attempted logins</b><br><i>(sum)</i></div>
    </div>

    <div class="w3-bar-item">
        <div id="tsLoginsSuccessful" class="float-left right pad-right-5px"><span id="tsLoginsSuccessfulNode"></span><br><span id="tsLoginsSuccessfulTotal"></span></div>
        <div class="float-right left pad-left-5px"><b>successful logins</b><br><i>(sum)</i></div>
    </div>

    <div class="w3-bar-item">
        <div id="tsLoginsFailed" class="float-left right pad-right-5px"><span id="tsLoginsFailedNode"></span><br><span id="tsLoginsFailedTotal"></span></div>
        <div class="float-right left pad-left-5px"><b>failed logins</b><br><i>(sum)</i></div>
    </div>

    <div class="w3-bar-item">
        <div id="tsHosts" class="float-left right pad-right-5px"><span id="tsHostsNode"></span><br><span id="tsHostsTotal"></span></div>
        <div class="float-right left pad-left-5px"><b>known hosts</b><br><i>(max)</i></div>
    </div>

    <div class="w3-bar-item">
        <div id="tsUsers" class="float-left right pad-right-5px"><span id="tsUsersNode"></span><br><span id="tsUsersTotal"></span></div>
        <div class="float-right left pad-left-5px"><b>known users</b><br><i>(max)</i></div>
    </div>

    <div class="w3-bar-item">
        <div id="tsPasswords" class="float-left right pad-right-5px"><span id="tsPasswordsNode"></span><br><span id="tsPasswordsTotal"></span></div>
        <div class="float-right left pad-left-5px"><b>known passwords</b><br><i>(max)</i></div>
    </div>
    
    <div class="w3-bar-item">
        <div id="tsPayloads" class="float-left right pad-right-5px"><span id="tsPayloadsNode"></span><br><span id="tsPayloadsTotal"></span></div>
        <div class="float-right left pad-left-5px"><b>known payloads</b><br><i>(max)</i></div>
    </div>
</div>
<script>
    ws_stats_connect();
</script>
{{ end }}